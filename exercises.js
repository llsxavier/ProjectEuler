/* If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000. */

function sumMultiples(a, b) {
  let sum = 0;
  for (let i = 1; i < 1000; i++) {
    if (i % a === 0 || i % b === 0) {
      sum += i;
    }
  }
  return sum;
}

sumMultiples(3, 5); // 233168

/* Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms. */

function fibonacci() {
  let a = 1;
  let b = 2;
  let c = 0;
  let sum = 2;
  for (let i = 0; b < 4000000; i++) {
    c = a + b;
    a = b;
    b = c;

    if (c % 2 === 0) {
      sum += c;
    }
  }
  return sum;
}

fibonacci(); // 4613732

/* The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ? */

function primeFactors(value) {
  factors = [];
  while (value > 1) {
    for (let i = 2; i <= value; i++) {
      if (value % i) continue;
      factors.push(i);
      value = value / i;
      break;
    }
  }
  return factors.reverse()[0];
}

primeFactors(600851475143); //6857

/* A palindromic number reads the same both ways.
The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

Find the largest palindrome made from the product of two 3-digit numbers. */

function reverse(number) {
  return parseInt(String(number).split('').reverse().join(''), 10);
}

function palindromicFunc() {
  while (0 < 1) {
    randomOne = Math.floor(Math.random() * 1000);
    randomTwo = Math.floor(Math.random() * 1000);
    if (randomOne < 99 && randomTwo < 99) continue;
    numOne = randomOne;
    numTwo = randomTwo;
    result = numOne * numTwo;
    if (result === reverse(result)) {
      if (result > 900000) {
        return result;
      }
    }
  }
}

palindromicFunc(); // 906609
